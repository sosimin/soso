<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns = "http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<aop:aspectj-autoproxy/>
	
	<bean id="login" class="aop_anno.Login">
	<constructor-arg value="kim"/>
	</bean>
	<bean id="logout" class="aop_anno.Logout"/>
	<bean id="search" class="aop_anno.Search"/>
	<bean id="printLog" class="aop_anno.PrintLog"/>
	
</beans>

<!-- 	어노테이션방식이면 안써도 됨
	<aop:config>
         <aop:aspect id="logAspect" ref="printLog">
               <aop:pointcut expression="execution(* log(..))" id="publicMethodAssu"/>           
             <aop:before method="checkLog" pointcut-ref="publicMethodAssu"/>
         </aop:aspect>
      
      </aop:config> -->
      
      <!--
      aop:aspect id = 없어도 되고 나중에 사용될수 있음..
	  aop:ref = bean id랑 매치해야 될 이름이고 bean에서 실제 해당하는 클래스 경로를 지정 해서 빈을 생성한다. (bean id = aop:aspect ref 와 매칭)
	  aop:pointcut expression = “execution()” : 어떤 메소드가 실행되면이라는 메인 로직
	  aop:pointcut id = aop:before 나 aop:around와 같은곳에 연동하기 위한 아이디..aop:before 나 aop:around와 매칭되어야 한다.
	  aop:before method = execution으로 실행되면 같이 실행되는 메소드명.. 이 메소드명은 aspect로 지정한 클래스에 해당하는 메소드 이다.(PrintLog에 있는 checkLog메소드에 해당)
	  aop:pointcut_ref = aop:pointcut에서 정의한 아이디 값과 매칭 시켜야 되는 값
        -->
 
	